@use "sass:math";


// Button
@mixin button() {
  @include header-font;
  margin:10px 10px 10px 0px;
  background-color:    transparent;
  font-size:           14px;
  font-style: normal;
  font-weight:         600;
  line-height:         20px;
  text-align:          center;
  display:             inline-flex;
  align-items:         center;
  justify-content:     center;
  padding:             10px;
  letter-spacing: 1px;
  min-width:           120px;
  min-height:          50px;
  cursor:              pointer;
  position:            relative;
  text-decoration:     none;
  text-shadow:         none;
  outline:             none;
  justify-content: space-around;
  transform:           perspective(1px) rotate(0.0000000001deg);
  backface-visibility: hidden;
  color: $white;
  text-transform: uppercase;
  border-radius: 5px;
  transition: all ease-in-out .25s;
  i {
    margin-left: 5px;
    // @include font-awesome-pro();  
    position:    relative;
    top:         1px;

  }
  .fa-brands {
    font-family: 'Font Awesome 6 Brands';
  }
}


// Dope Hover

@mixin dope-hover($bg_hover, $font_color, $border_color, $border_color_hover) {
  position: relative;
  transition: color 0.5s, transform 0.25s;
  overflow: hidden;
  border:1px solid $border-color;

  &:active {
    transform: translateY(3px)
  }


  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: -webkit-fill-available;
    height: 200px;
    background-color: $bg_hover;
    transform: translate(-10px, -70px) scale(0.1);
    opacity: 0;
    z-index: -1;
    transition: all ease-out .2s;

  }

  &:hover {
    color: $font_color;
    border:1px solid $border_color_hover;
    &::after {
      opacity: 1;
      transform-origin: 100px 100px;
      transform: scale(1) translate(0px, -70px);
    }
  }
}

// dope hover end-----

@mixin header-font() {
  font-family: 'Montserrat', sans-serif;

}
@mixin paragraph-font() {
	font-family: 'Roboto', sans-serif;
}


@mixin text-link() {  
  @include header-font;
  font-weight: 500;
  font-size: 22px;
  line-height: 29px;
  letter-spacing: -0.022em;
  font-style: normal;
  display: inline-block;
  text-decoration: none;
  font-style: normal;
  padding: 0px;
  min-width: unset;
  min-height: unset;
  padding-bottom: 3px;
  transition: all .2s;
  text-align: center;
  position: relative;
  width: fit-content;
  color: $black;



  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    left: 0;
    bottom: 0;
    background: $yellow;
    transition: all .2s;
    transform: translateZ(1px) rotate(0.0000000001deg);

  }

  &:hover {
    color: $yellow;

    &::before {
     width: 0%;
       // background: $blue;
       transition: all .2s;
     }
   }


   i {
     margin-left: 10px;
   }
 }




/*
 |----------------------------------------------------------------
 |  Font Faces
 |----------------------------------------------------------------
 */


 @mixin font-awesome-pro() {
 	font-family: "Font Awesome 5 Pro";
 	text-rendering: auto;
 	font-smoothing: antialiased;
 }




/*
 |----------------------------------------------------------------
 |  Letter spacing
 |----------------------------------------------------------------
 */

/*
 |----------------------------------------------------------------
 |  Fluid Property
 |----------------------------------------------------------------
 */
 @mixin fluid-prop($property, $max, $min: null, $maxScreen: 1200, $minScreen: 320, $unit: 'px') {
 	@if ($min == null) {
 		$min: $max;
 	}

 	#{$property}: fluid($max, $min, $maxScreen, $minScreen, $unit);

 	@media screen and (min-width: #{$maxScreen}#{$unit}) {
 		#{$property}: #{$max}#{$unit};
 	}
 }

 @mixin fluid-prop($property, $max, $min: null, $maxScreen: 1200, $minScreen: 320, $unit: 'px') {
 	@if ($min == null) {
 		$min: $max;
 	}

 	#{$property}: fluid($max, $min, $maxScreen, $minScreen, $unit);

 	@media screen and (min-width: #{$maxScreen}#{$unit}) {
 		#{$property}: #{$max}#{$unit};
 	}
 }

 @mixin fluid-prop-percent($property, $max, $min: null, $maxScreen: 1200, $minScreen: 320, $unit: '%') {
 	@if ($min == null) {
 		$min: $max;
 	}

 	#{$property}: fluid($max, $min, $maxScreen, $minScreen, $unit);

 	@media screen and (min-width: #{$maxScreen}#{$unit}) {
 		#{$property}: #{$max}#{$unit};
 	}
 }


 @mixin masker($image, $position) {
  $url: '../../images/' + $image;
  mask-image: url($url);
  -webkit-mask-clip: border-box;
  -webkit-mask-size: cover;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: bottom;
}